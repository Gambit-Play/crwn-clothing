{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\anuar.abdullahi\\\\Desktop\\\\React\\\\crwn-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    console.log(user);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    console.log(userSnapshot);\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n;","map":{"version":3,"sources":["C:/Users/anuar.abdullahi/Desktop/React/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","console","log","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga"],"mappings":";AAAA,SACIA,UADJ,EAEIC,GAFJ,EAGIC,GAHJ,EAIIC,IAJJ,QAKO,oBALP;AAOA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,SACIC,IADJ,EAEIC,cAFJ,EAGIC,yBAHJ,QAIO,+BAJP;AAQA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AAAA,iBACiB,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADvB;AAAA,UACQI,IADR,QACQA,IADR;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,OAAO,GAAG,MAAMZ,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAMI,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AACA,UAAMf,GAAG,CACLI,aAAa;AACTa,MAAAA,EAAE,EAAEF,YAAY,CAACE;AADR,OAENF,YAAY,CAACG,IAAb,EAFM,EADR,CAAT;AAMH,GAZD,CAYE,OAAOC,KAAP,EAAc;AACZnB,IAAAA,GAAG,CAACK,aAAa,CAACc,KAAD,CAAd,CAAH;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAC/D,MAAI;AAAA,kBACiB,MAAMjB,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADvB;AAAA,UACQZ,IADR,SACQA,IADR;;AAEA,UAAMG,OAAO,GAAG,MAAMZ,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAMI,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CACLI,aAAa;AACTa,MAAAA,EAAE,EAAEF,YAAY,CAACE;AADR,OAENF,YAAY,CAACG,IAAb,EAFM,EADR,CAAT;AAMH,GAVD,CAUE,OAAOC,KAAP,EAAc;AACZnB,IAAAA,GAAG,CAACK,aAAa,CAACc,KAAD,CAAd,CAAH;AACH;AACJ;AAAA;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACnC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCjB,gBAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUkB,kBAAV,GAA+B;AAClC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUS,QAAV,GAAqB;AACxB,QAAM5B,GAAG,CAAC,CACNC,IAAI,CAACuB,mBAAD,CADE,EAENvB,IAAI,CAACyB,kBAAD,CAFE,CAAD,CAAT;AAIH;AAAA","sourcesContent":["import {\r\n    takeLatest,\r\n    put,\r\n    all,\r\n    call\r\n} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\nimport { signInSuccess, signInFailure } from './user.actions';\r\n\r\nimport {\r\n    auth,\r\n    googleProvider,\r\n    createUserProfileDocument\r\n} from '../../firebase/firebase.utils';\r\n\r\n\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        console.log(user);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        console.log(userSnapshot);\r\n        yield put(\r\n            signInSuccess({\r\n                id: userSnapshot.id,\r\n                ...userSnapshot.data()\r\n            })\r\n        )\r\n    } catch (error) {\r\n        put(signInFailure(error))\r\n    }\r\n};\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            signInSuccess({\r\n                id: userSnapshot.id,\r\n                ...userSnapshot.data()\r\n            })\r\n        )\r\n    } catch (error) {\r\n        put(signInFailure(error))\r\n    }\r\n};\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n};\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n};\r\n\r\nexport function* userSaga() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n    ])\r\n};\r\n"]},"metadata":{},"sourceType":"module"}