{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\n/*=============================================================================*/\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const colllectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(colllectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n;\n/*=============================================================================*/\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;\n/*=============================================================================*/\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n;","map":{"version":3,"sources":["C:/Users/anuar.abdullahi/Desktop/React/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","colllectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SACIA,UADJ,EAEIC,IAFJ,EAGIC,GAHJ,EAIIC,GAJJ,QAKO,oBALP;AAOA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA;;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AACA,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,eAAe,GAAG,MAAMb,IAAI,CAC9BI,+BAD8B,EAE9BO,QAF8B,CAAlC;AAIA,UAAMV,GAAG,CAACI,uBAAuB,CAACQ,eAAD,CAAxB,CAAT;AACH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAAA;AAED;;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMjB,UAAU,CACZQ,eAAe,CAACU,uBADJ,EAEZT,qBAFY,CAAhB;AAIH;AAAA;AAED;;AAEA,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAMhB,GAAG,CAAC,CACNF,IAAI,CAACgB,qBAAD,CADE,CAAD,CAAT;AAGH;AAAA","sourcesContent":["import {\r\n    takeLatest,\r\n    call,\r\n    put,\r\n    all\r\n} from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n    fetchCollectionsSuccess,\r\n    fetchCollectionsFailure\r\n} from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\n/*=============================================================================*/\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    try {\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const colllectionsMap = yield call(\r\n            convertCollectionsSnapshotToMap,\r\n            snapshot\r\n        );\r\n        yield put(fetchCollectionsSuccess(colllectionsMap))\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message))\r\n    }\r\n};\r\n\r\n/*=============================================================================*/\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n};\r\n\r\n/*=============================================================================*/\r\n\r\nexport function* shopSagas() {\r\n    yield all([\r\n        call(fetchCollectionsStart)\r\n    ])\r\n};"]},"metadata":{},"sourceType":"module"}